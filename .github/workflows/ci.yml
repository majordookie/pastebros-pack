name: CI

on:
  push:
    branches:
      - "release/*"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Extract Version from Branch Name
        run: echo "VERSION=$(echo ${GITHUB_REF#refs/heads/release/})" >> $GITHUB_ENV

      - name: "Update deps in manifest.json"
        run: |
          MODS_JSON=$(cat mods.json)
          DEPENDENCIES=()
          for row in $(echo "${MODS_JSON}" | jq -r '.mods[] | @base64'); do
              _jq() {
                echo ${row} | base64 --decode | jq -r ${1}
              }

              MOD_NAME=$(_jq '.name')
              AUTHOR_NAME=$(_jq '.author')
              # Make the API call
              LATEST_VERSION=$(curl -s "https://thunderstore.io/api/experimental/package/${AUTHOR_NAME}/${MOD_NAME}/" | jq -r '.latest.version_number')
              DEPENDENCIES+=("\"${AUTHOR_NAME}-${MOD_NAME}-${LATEST_VERSION}\"")
              echo "Updating dep to ${AUTHOR_NAME}-${MOD_NAME}-${LATEST_VERSION}"
          done

          echo "{
            \"name\": \"pastebros\",
            \"version_number\": \"${VERSION}\",
            \"website_url\": \"https://github.com/majordookie/pastebros-pack\",
            \"description\": \"Mod pack for the paste bros\",
            \"dependencies\": [$(IFS=, ; echo "${DEPENDENCIES[*]}")]
          }" | jq > manifest.json

      - name: Package Files
        run: |
          zip pastebros-${{ env.VERSION }}.zip manifest.json README.md && zip -j pastebros-${{ env.VERSION }}.zip resources/icon.png

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./pastebros-${{ env.VERSION }}.zip
          asset_name: pastebros-${{ env.VERSION }}.zip
          asset_content_type: application/zip
      - name: Upload to Thunderstore
        run: |
          curl -X POST -H "Authorization: Bearer ${{ secrets.THUNDERSTORE_API_KEY }}" -H "Content-Type: multipart/form-data" -F 'metadata={"author_name": "pastebros", "has_nsfw_content": false, "categories": ["modpacks"], "communities": ["lethal-company"]}' -F "file=@./pastebros-${{ env.VERSION }}.zip" "https://thunderstore.io/api/experimental/submission/upload/"
